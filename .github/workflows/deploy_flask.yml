name: Build and Deploy Flask to AWS

on:
  push:
    branches: [main]

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker image
      run: |
        docker build -t flask_cals_ecr .

    - name: Tag and Push to ECR
      run: |
        docker tag flask_cals_ecr:latest 103056765706.dkr.ecr.us-west-1.amazonaws.com/flask_cals_ecr:latest
        docker push 103056765706.dkr.ecr.us-west-1.amazonaws.com/flask_cals_ecr:latest

    - name: Register ECS Task Definition from JSON
      id: task-def
      run: |
        TASK_DEF_ARN=$(aws ecs register-task-definition \
          --cli-input-json file://flask_cals_task-revision1-AWS-CLI-input.json \
          --query 'taskDefinition.taskDefinitionArn' \
          --output text)
        echo "task_definition_arn=$TASK_DEF_ARN" >> $GITHUB_OUTPUT

    - name: Update ECS Service
      run: |
        aws ecs update-service \
          --cluster ${{ secrets.ECS_CLUSTER }} \
          --service ${{ secrets.ECS_SERVICE }} \
          --task-definition ${{ steps.task-def.outputs.task_definition_arn }} \
          --force-new-deployment
